//Plugins
apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

// Version
version = '1.0'

// Android config
android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 23
        versionCode 1
        versionName version
    }
    buildTypes {
        release {
            debuggable false
        }
        debug {
            debuggable true
        }
    }
}

// Maven config
def siteUrl = 'http://maxr1998.de/'
def gitUrl = 'https://github.com/Maxr1998/XMediaNotificationTrackSelector.git'
group = "de.Maxr1998"

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'

                name 'Third-Party library for XMediaNotificationTrackSelector'
                url siteUrl

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'Maxr1998'
                        name 'Max Rumpf'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}

// Bintray config
bintray {
    user = 'maxr1998'
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : ""
    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = 'track-selector-lib'
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ['Apache-2.0']
        publish = true
        publicDownloadNumbers = true
        labels = ['android', 'xposed', 'media']
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}
